// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AccumulatedProductCostWidgetPresenter when chart data is undefined renders an error 1`] = `
<LoadingOrErrorPresenter
  error="Error"
  loading={false}
/>
`;

exports[`AccumulatedProductCostWidgetPresenter when chart data is undefined renders loading 1`] = `
<LoadingOrErrorPresenter
  error=""
  loading={true}
/>
`;

exports[`AccumulatedProductCostWidgetPresenter when there are chart data renders a Doughnut 1`] = `
<div
  className="domain-legend-container"
>
  <CardLegend
    colors={
      Array [
        "#0c3d8a",
        "#859ec4",
        "#D8DADA",
        "#487ebd",
        "#007898",
        "#7fbbcb",
        "#58737a",
        "#92aab1",
        "#eee7a5",
        "#f1e364",
        "#f8b100",
        "#dcaeb9",
        "#ad405a",
        "#d9d4b9",
        "#a19351",
        "#886b22",
        "#7d7a58",
        "#564e02",
        "#c1dfc4",
        "#7dab6e",
        "#008d3a",
        "#36542c",
        "#263428",
      ]
    }
    labels={
      Array [
        "BigQuery (16958.16 EUR)",
        "Cloud Build (10.53 EUR)",
        "Cloud DNS (0.56 EUR)",
        "Cloud Functions (0 EUR)",
        "Cloud Key Management Service (KMS) (1.11 EUR)",
      ]
    }
  />
  <div
    className="canvas-container"
  >
    <Doughnut
      data={
        Object {
          "datasets": Array [
            Object {
              "backgroundColor": Array [
                "rgb(109,46,235)",
                "rgb(222,28,70)",
                "rgb(220,159,172)",
                "rgb(125,62,251)",
              ],
              "data": Array [
                424.15,
                1.5,
                168.46,
                9261.77,
              ],
            },
          ],
          "labels": Array [
            "Cloud Build(424.15)",
            "Source Repository(1.5)",
            "Cloud Key Management Service (KMS)(168.46)",
            "Compute Engine(9261.77)",
          ],
        }
      }
      options={
        Object {
          "legend": Object {
            "display": false,
          },
          "responsive": true,
        }
      }
    />
  </div>
</div>
`;

exports[`AccumulatedProductCostWidgetPresenter when there are no chart data doesnt render a Doughnut 1`] = `
<p>
  No data available, please select another time and/or domain/product.
</p>
`;
